doctype html
html
  head
    title Menu - CSS - Tutorials - KVD
    include /header.jade
  body.tutorial-content
    include /nav.jade
    include /tweets.jade
    include _side.jade
    
    .top
      .container
        h1 
          span CSS: MAKING A MENU
          | Quote: a simple menu is a collection of buttons.
          
    .container.divider
      p Making a menu via #[mark CSS] can sometimes be frustrating and time consuming. If you look at the other content on our page, you’ll realise that the most visual #[mark CSS] and complexity will be in your menu. So let’s take a look at some easy(er) ways of making typical menu you’ll find on websites these days.
      
      p #[strong Lets start with a classic menu] that consists out of block containing some text. We’ll use the most commonly used text for menu’s ever. No need to be creative there.
      
      p.quote Rule #1: Always define your menu as a list. More specifically: a bullet list.
      
      p There are some negative but mostly positive reasons why you should do this. However, it’s a general rule and as such, everyone will have a faster and easier time finding and using your menu.

      p Here’s a basic menu in code:
      
      pre
        code(class="language-html")
          | &lt;ul id="menu"&gt;
          |   &lt;li&gt;Home&lt;/li&gt;
          |   &lt;li&gt;About Me&lt;/li&gt;
          |   &lt;li&gt;Contact&lt;/li&gt;
          | &lt;/ul&gt;
      
      p You’ll notice that in order to stack your items in your list you’ll need &lt;li&gt; elements, which stand for list items. *What a surprise*. Don’t forget that every element in the list should be clickable and that means we’re in the need, #[strong the need for anchor tags]. I’ll just add an a tag in every element with the href set to #. That means that this link will go nowhere for now.
      
      pre
        code(class="language-html")
          | &lt;ul id="menu"&gt;
          |   &lt;li&gt;&lt;a href="#"&gt;Home&lt;/a&gt;&lt;/li&gt;
          |   &lt;li&gt;&lt;a href="#"&gt;About Me&lt;/a&gt;&lt;/li&gt;
          |   &lt;li&gt;&lt;a href="#"&gt;Contact&lt;/a&gt;&lt;/li&gt;
          | &lt;/ul&gt;
      
      p The standard color coding for a link is blue (ugly if you ask me) and there is a line underneath. The fact they are blue and underlined was necessary in the past for people to recognise them as interactive text, but nowadays people are smart enough to figure out where the links are.
      
      p.quote Rule #2: Define your links with a different color that the default blue and no line. The line is no longer needed and lowers readability of text.
      
      p So, here is the #[mark CSS] to the #[mark HTML]:
      
      pre
        code(class="language-css")
          | #menu a{
          |   color: red;
          |   text-decoration: none;
          | }
      
      p Let’s assume that the menu has to be horizontal and at the top of your page. You’ll see that every button is stacked underneath one another. To fix this we’ll give our buttons the float property, but in doing so, some stuff might go wrong (#[a(href="float_clear.html") god-damn floats]!). On our list itself we’ll have to specify two important things. First: give your list a height. Second: remove those annoying bullets that we don’t want to use.
      
      pre
        code(class="language-css")
          | #menu{
          |   height: 50px;
          |   list-style-type: none;
          | }
          
      p.quote Rule #3: A list (menu) on a webpage needs a lot of information. From functionality to design. So most #[mark CSS] you’ll apply to your buttons themselves, the a tags.
      
      p Let’s take a look at what I would add to them to make it all look a little bit prettier:
      
      pre
        code(class="language-css")
          | #menu a{
          |   color: white;
          |   text-decoration: none;
          |   padding: 10px 20px; 
          |   float: left; 
          |   background-color: red; 
          |   border-radius: 8px; 
          |   margin-right: 10px;
          | }
      
      .code_example
        div(style="background-color: red; color: white; padding: 10px 20px; border-radius: 8px; margin-right: 10px; float: left;") Home
        div(style="background-color: red; color: white; padding: 10px 20px; border-radius: 8px; margin-right: 10px; float: left;") About
        div(style="background-color: red; color: white; padding: 10px 20px; border-radius: 8px; margin-right: 10px; float: left;") Contact
        
      p So, let's take a look at the code one line at a time:
      
      ol.conlist
        li Change the color of the text
        li Remove the bottom line
        li Give the button and the text some breathing room
        li Put the buttons next to each other
        li Make the background color red
        li Round off the corners
        li Make sure there si a space between the buttons
      
      p And now we have a good looking horizontal menu. What we could add as an extra is some sort of rollover when people hover over the button.
      
      pre
        code(class="language-css")
          | #menu a:hover{
          |   background-color: blue;
          | }
          
      p We'll take a look at some extras like: animation in menu's, vertical buttons, ... in the next tutorial.
      
    include /footer.jade
    
    script.
      $(".mainMenu .menuTutorials").addClass("selected");
      $(".sideMenu .css6").addClass("active");
