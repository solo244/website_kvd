doctype html
html
  head
    title Filters - CSS - Tutorials - KVD
    include /header.pug
  body.tutorial-content
    include /nav.pug
    include /tweets.pug
    include _side.pug
    
    .top
      .container
        h1 
          span CSS: FILTERS
          | Let's filter the most random image on the internet.
          
    .container.divider
      p.breadcrumb
        a(href="../") tutorials
        | &nbsp;&nbsp;&gt;&nbsp; 
        span css
        | &nbsp;&nbsp;&gt;&nbsp; 
        span filters
        
      p When I was a kid I had fun watching those two guys in black and white on #[strong ye old tv], falling over banana peels and off ladders. And with that sentence I realised how old I am. But in any case, the black and white effect is something that you’ll see on images as some sort of rollover effect a lot. Add a subtle transition and people will enjoy scrolling over and viewing your images. What you in most cases will have to do is provide two images, a normal, coloured picture and a black and withe version. And then you’ll have to do some magic with #[mark CSS] to get the one behind the other. #[strong Well no, more]! Introducing; filters.
      
      p Note: The value you define in #[mark CSS] for your filters will be between 0 and 1 or between 0% and 100%. So if you would like to apply the filter a little bit but not completely, you can define your value as a percent 50% or with a value of 0.5. In most cases it’s also not possible to specify a filter with a negative value. #[strong You now need to be glass half full kind of person].
      
      h2 Possible filters
      
      p For the purpose of this tutorial I'll be using the most random image on the internet, shown below.
      
      img(src="../../images/tutorials/simple/random.jpg", class="centerText", style="")
      
      p #[strong So, what filters are available? Here is my top 5:]
        
      h3 1. GRAYSCALE
      
      img(src="../../images/tutorials/simple/random.jpg", class="centerText", style="filter: grayscale(1)")
      
      p The grayscale filter converts your image into its grayscale equivalent. This can be done from 0 to a 100 percent, 0 being complete colourful and 100 being full black and white.
      
      pre
        code(class="language-css")
          | img{
          |   -webkit-filter: grayscale(1);
          | }
          
      h3 2. BLUR
      
      img(src="../../images/tutorials/simple/random.jpg", class="centerText", style="filter: blur(5px)")
      
      p The blur filter applies an unsharpen effect to your image. This effect will be a #[mark Gaussian blur] and you need to define a pixel value for the size of the #[mark blur]. #[strong The bigger the value, the less sharp and thinner your effect will be].
      
      pre
        code(class="language-css")
          | img{
          |   -webkit-filter: blur(10px);
          | }
          
      h3 3. SEPIA
      
      img(src="../../images/tutorials/simple/random.jpg", class="centerText", style="filter: sepia(1)")
      
      p The sepia filter applies a sepia effect to your image, changing it to a sepia one-color scheme. This can be done from 0 to a 100 percent, 0 being no visible effect and a 100 overlaying your image with a sepia colour.
      
      pre
        code(class="language-css")
          | img{
          |   -webkit-filter: sepia(1);
          | }
          
      h3 4. BRIGHTNESS
      
      img(src="../../images/tutorials/simple/random.jpg", class="centerText", style="filter: brightness(300%)")
      
      p The brightness filter applies a shine or light, even darken effect to your image, changing its brightness levels. Every image has a standard of 100% light and can be made darker by using values lower than 100%, 0% being completely dark. They can even be given very high values to lighten up your image to extreme heights.
      
      pre
        code(class="language-css")
          | img{
          |   -webkit-filter: brightness(300%);
          | }
          
      h3 5. DROP-SHADOW
      
      img(src="../../images/tutorials/simple/random.jpg", class="centerText", style="box-shadow: 0 0 20px black")
      
      p The drop-shadow filter is important because it works a little bit different then your ordenairy #[mark box-shadow]. Whereas #[mark box-shadow] will always create a shadow in the shape of a box (rectangle), hence the name, the #[mark drop-shadow] filter will take over the shape of an image or vector perfectly, #[strong making it a better choice for unique shapes].
      
      pre
        code(class="language-css")
          | img{
          |   -webkit-filter: drop-shadow(10px 10px 10px rgba(0,0,0,0.5));
          | }
          
      h2 And some extra’s:
      
      ol.conlist
        li Hue-rotate: adds a new colour profile, changing everything to funk!
        li Saturation: let’s the colour be a bit more.. alive
        li Invert: turns all the colours around
        li Opacity: makes a source transparent (like with CSS opacity)
        
      h2 The positives
      
      ul.conlist
        li Time saver because it’s changeable via code
        li You now only need one source image
        li The one image is still in HTML
        li You can use it on the fly
        
      h2 The negatives
        
      ul.conlist
        li Load time is awful for a lot of different effects
        li Code based might cause some problems in workflow
        li Support to all browsers, not compatible
        
      table.support
        include /support_table.pug
        tr
          td 
            strong Supported
          td 
            i(class="icon dripicons-checkmark") 31+
          td 
            i(class="icon dripicons-checkmark") 35+
          td 
            i(class="icon dripicons-cross")
          td 
            i(class="icon dripicons-checkmark") 18+
          td 
            i(class="icon dripicons-checkmark") 7+
      
    include /footer.pug
    
    script.
      $(".mainMenu .menuTutorials").addClass("selected");
      $(".sideMenu .css5").addClass("active");
