doctype html
html
  head
    title Floats and clears - CSS - Tutorials - KVD
    include /header.pug
  body.tutorial-content(data-ref="float")
    include /nav.pug
    include /tweets.pug
    include _side.pug
    
    .top
      .container
        h1 
          span CSS: FLOATS & CLEARS #1
          | Positioning your elements via floating. Incoming problems...
          
    .container.divider
      p.breadcrumb
        a(href="../") tutorials
        | &nbsp;&nbsp;&gt;&nbsp; 
        a(href="index.html") css
        | &nbsp;&nbsp;&gt;&nbsp; 
        span floats and clears #1
        
      h2 A story
      
      p Using the #[mark float] property on elements can be compared to the following story. Imaging a sunny day with the sun shining bright and giving off a heating glow that warms your face. You’re sitting on the sidewalk. And although it’s nice and cosy, it’s just too warm. And all of a sudden there’s an ice cream truck sound in the far distance. We all know what that means and whilst you run inside to get some coins lying around, you trip, fall face first on the floor with your arms reacting to late and waving around like scarves in the wind. #[strong You get up after that face plant], flabbergasted, and rush back out with the change you collected. You can still hear the promised bells of ice cream, but the truck is nowhere to be seen. Hatefully you run around, hoping to catch it again and after a minute of looking, you light up, as in the corner of your eye you see the truck drying away slowly, hoping to attract more customers. You start running over to it but have to wait to cross the street as all of a sudden, it’s filled with cars. Each going too fast for you to slip between. So you have to wait. But luckily it’s only for two minutes. But in the meantime the truck fades more and more in the distance. 
      
      p.quote After that extra run and catching up to it, the vendor lets you know that he only has two flavours left: bad and worse. 
      
      p You don’t really care for either of those, but since you ran all that way, you guess you might take one of each. #[strong Two scoops later], you hear the vendor ask for his money and realise what those two scopes are worth. Only then do you realise that you’re short on money. Saddened by this, you ask him to diminish the number of scoops by one and you take the journey back home. Waiting for the traffic again, you arrive shortly and happy as you are, you trip yet again over the same thing you tripped over the first time. Leaving your sweet sweet ice cream to land on the floor, inedible by normal standards. Sitting down and soaking about this recent loss, you realise that there’s ice cream in your freezer. You rush over there, almost tripping over yet that same spot, and treat yourself to a nice, well deserved ice cream.
      
      p Now. This story is the exact copy of what you will feel, when you start working with the #[mark float] property. You’ll feel unlucky, things will go wrong and same bad stuff will happen over and over for #[strong no apparent reason]. One small problem or mistake might have an influence on everything else and that might mess up all of the hard work you did. However, no matter how difficult or annoying this might be, as long as you hold in there, #[strong you’ll always find a way to fix it]. Maybe not in a way you intended in the first place, but you’ll fix it. The only thing you’ll need is time and effort. Now on to the practical stuff.
      
      h2 You'll need to float
      
      p I’m not going to go and define #[mark float] and #[mark clear] via the internet. Rather, I’ll give you my personal interpretation of them and how I use(d) them. First off, #[mark floating] is something you’ll use a lot in webdesign. Why? Because a website is a huge collection of block elements that you’ll want to put next to each other. But block elements will always be on top of each other. You can find proof underneath, not that you would need it, #[strong I know you blindly believe what I’m telling you].
      
      p Now, we have two blocks underneath each other. I cleverly named the boxes: #[mark box1] and #[mark box2]. You’ll also notice that I gave them similar #[mark class] names. That way I can define similar properties to both of them in one go, instead of having to do it one at a time. Making an element #[mark float] means letting it #[mark float] as high as possible. You can specify pretty much one thing, which side it has to go to: #[mark left] or #[mark right]. Imagine I want to position #[mark box2] next to #[mark box1].
      
      pre
        code(class="language-html")
          | &lt;div id="box1" class="box"&gt;&lt;/div&gt;
          | &lt;div id="box2" class="box"&gt;&lt;/div&gt;
      pre
        code(class="language-css")
          | .box{
          |   width: 100px;
          |   height: 100px;
          | }
          | &nbsp;
          | #box1{
          |   background-color: red;
          | }
          | &nbsp;
          | #box2{
          |   background-color: yellow;
          | }

      .code_example
        div(style="background-color: red; width: 100px; height: 100px;")
        div(style="background-color: yellow; width: 100px; height: 100px;")
      
      h2 Come to the right side
      
      p I'll change the #[mark float] property of #[mark box2] to right because I want it to be positioned on the right side. What you'll see now is that #[mark box2] floats as right as it possibly can but it doesn’t move up. #[strong This is not the result we wanted]. We want #[mark box2] to be next to #[mark box1], as left as possible. But to put two elements next to each other we'll have to let both elements #[mark float]. So I'll add a #[mark float] property to #[mark box1]. Although #[mark box1] is already in the right place and I don't want to actually move it, I still have to give it the #[mark float] property in order to #[mark float] other elements next to it.
      
      pre
        code(class="language-css")
          | #box1{
          |   float: left;
          | }
          | &nbsp;
          | #box2{
          |   float: right;
          | }
      
      .code_example
        div(style="background-color: red; width: 100px; height: 100px; float: left;")
        div(style="background-color: yellow; width: 100px; height: 100px; float: right;")
      
      h2 Move to the left
      
      p After letting #[mark box1] #[mark float] left, I'll notice that #[mark box2] still has to be moved to the left side. It has to #[mark float] as left as possible, next to #[mark box1]. Luckily for us, #[mark floating] elements will never be stacked on top of each other but rather next to each other. You'll also notice that we'll be using #[mark float] left more often than #[mark float] right. The simple reason for this is that we read from left to right and usually start by putting our elements on the left side of our page.
      
      pre
        code(class="language-css")
          | #box1{
          |   float: left;
          | }
          | &nbsp;
          | #box2{
          |   float: left;
          | }
      
      .code_example
        div(style="background-color: red; width: 100px; height: 100px; float: left;")
        div(style="background-color: yellow; width: 100px; height: 100px; float: left;")
      
      h2 Out of the normal flow
          
      p We finally have our elements next to each other. You'll notice that adding new boxes next to #[mark box1] and #[mark box2] is simple. Just add an element with the #[mark float] #[mark left] property and it will automatically be positioned next to the other boxes. That all fun and games, but I haven’t talked about why making elements #[mark float] is so annoying. So far everything was easy right? Well yes, but making elements #[mark float] has its consequences. Imagine we would be using this on a website and wanted to add a footer underneath these two boxes. As is often the case with modern websites. #[mark Floating] elements have some nasty behaviours and will actually no longer fit in the #[strong "normal flow"] of the document. That means that elements added behind it will position themselves differently. I'll show this by adding a footer after #[mark box1] and #[mark box2]. Notice where the footer ends up.
      
    include /footer.pug
    
    script.
      $(".mainMenu .menuTutorials").addClass("selected");
      $(".sideMenu .css1").addClass("active");
